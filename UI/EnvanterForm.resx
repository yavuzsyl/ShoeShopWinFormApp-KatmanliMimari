<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAACxMAAAsTAQCanBgAAAPUSURBVHhe7ZtZyExRAMc/+1IIUaII2aJkKVsICfEgHiT6
        ZN+SNSlC9jV5kAeFsjzYnlCSvJEkCVHeZIs8SKRs/9+de5rpduebufd+c++Z7zu/+vXdc2bG3POfO+ec
        e86ocTgcDofDkZSp8lzKbpTWwAn98/+mIe/1Vx6XzWTmmBNLC97rtvwsb8n2MlOyCAB7y+fyhX+cGVkF
        AHz6NyVXwwQqsiDLAIB+gP7gl1xKRdpkHYBhiSSE1DtHWwKA8TJx59hB9orgVflQjqtHR8hilAo8UefI
        BIMxlrE2a9/J5jLIPvlSNvFK4cTuHL/JTTLsky5mXxn2KSZxvSSE+TJIH/ldEoK5GsI8L7kK/sjFsix4
        04m5w8zhXAgiDELYK8MaHpR/570si2oJIAomiLIoFUBredp3pl/eKukI+UuZIWi5vCJPyp4S5sp5uUOP
        hXJg7jAUKwOgcfTQXH675Cp5SfaTfM9ayKOSN+wv58g3srOk/qccJeGMnJI7DMXKAAzMuAhgkqS33i17
        yKbyg2wlDYclzyeA/fK17CKrOoBlkgBggNwhP8phkg6Hr4LhiOTqIAC+Alz6d+VZWXUBTJOz5Q3J1JMG
        rZGD5X05Qx6QF/w6HucT7yhNAHBK/pBVF8BIyfhKI7nMO8k98rrcIpmc8DVYJOkbjsnuEhbIMblD77V0
        pEO8UjhWBpAmmQUwOXeYKS0l57LOKyUjUgCP5FNpXlSOdyRDXX36RRIAHWxSzHmWBUOZGcfLlRPmZION
        SCJ3c4w09YE5z4pR8TdIiAvAt2K4AHxtxcoAuJNkNlnqdUymrklmoHGxLoDhklEDH1NRB4wGPI9VnUFU
        xMC6AFg3oFFP5GgqfJges6rLJMgwVD6TPH8tFTGwLoCDkgYFp7kPJPX3vFKe7ZJ6c/cZFWsDWOmVcrD6
        +1VSz201N1SGzbLBBwCzZFiH12gCKEaDC+CEjBMAwcXBqgDo5V9JGjSdigLayZ2yjVfKw2oyz2c0MAsq
        UbAqgN+SxrCqVLhuCKxD8NhYr5SnrbwseYwdoahYFQDbWTSEHt/sFxhYH+QxtsYKYXmdLTseY+4QFasC
        AHp6GlPrlfIUC4BFV+oveqXoWBfAIUmDgp1gsQBMJ8jeQxysC6DYMFgqgAY/D3AByEYRAJsqNIgfYhTC
        thr1wdte5gbU8zcO1gXAWj8Neis3UFEAW2iFbJNstvJ8tuLiYF0A3aS58+PHVXVhFkQ+Sbbh4mBdAEAI
        9AGlfti4Wq6QXb1SPKwMIE1SCYDL1LyRbZpzqxhZ/IeJqHKODofD4XA4DDU1/wH1ivVyii6LkAAAAABJ
        RU5ErkJggg==
</value>
  </data>
</root>